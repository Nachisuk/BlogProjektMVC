@model BlogProjekt.Models.Post
@using BlogProjekt.KlasyPomocnicze
@{
    ViewBag.Title = "EdytujPost";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<div class="container">
    <div class="row">
        <div class="col">

        </div>
        <div class="col-6">

            <div id="errorMessage">

            </div>

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Post_ID)

                <h1>Edytuj post</h1>
                <div class="form-group">
                    <p>
                        <label>Tytuł postu</label>
                        <br />
                        @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control", id = "postName" } })

                    </p>
                </div>

                <div class="form-group">
                    <p>
                        <label>Treść</label>
                        <br />
                        @Html.TextAreaFor(model => model.text_content, new { @class = "form-control", id = "postContent" })
                    </p>
                </div>

                <div class="form-group">
                    <p>
                        <label>Obrazek</label>
                        <br />
                        @Html.EditorFor(model => model.img_route, new { htmlAttributes = new { @class = "form-control", id = "postImgRoute" } })
                    </p>
                </div>

                <div class="form-group">
                    <p>
                        <label>Czy przypiąć?</label>
                        <br />
                        @Html.EditorFor(model => model.ifTop)
                    </p>
                </div>

                <div>
                    <div class="form-group">

                        <label>Tagi postu</label>
                        <br />
                        <div style="float:right">
                            <span id="toggleAddTag">Chcesz dodać nowy tag? <b>Kliknij!</b></span>
                            <div id="addTagForm">

                                <label>Wpisz nazwe tagu</label>
                                <input class="form-control" type="text" id="label" name="TagName" value="" />
                                <button type="button" id="addTag" class="btn btn-success" style="margin-top:5px">Dodaj!</button>

                            </div>
                        </div>
                        <select id="tags1" class="selectpicker" name="TagsIds" multiple data-live-search="true" title="Dodaj tagi postu">
                            @foreach (var tag in ObsługaBazyDanych.zwrocListeTag())
                            {
                                if (Model.Tags.FirstOrDefault(t => t.Tag_ID == tag.Tag_ID) != null)
                                {
                                    <option value=@tag.Tag_ID selected>@tag.tagName</option>
                                }
                                else
                                {
                                    <option value=@tag.Tag_ID>@tag.tagName</option>
                                }
                            }
                        </select>

                    </div>
                    


                </div>



                <p>
                    <input id="submitButton" type="submit" value="Dodaj post" class="btn btn-success" />
                </p>
            }

        </div>

        <div class="col">
            
        </div>
    </div>
</div>




<script>
    $(document).ready(function () {
        $('#addTagForm').hide();
        $('.selectpicker').selectpicker('render');

        $('#addTag').click(function () {

            if ($('#label').val() == '') {
                var errorText = $('<div class="error alert alert-danger" role="alert">Tag nie może być pusty!!</div>');
                $("#errorMessage").append(errorText);
                return false;
            }
            $("#errorMessage").html('');
            $('#addTagForm').hide();
            var link = '@Url.Action("stworztagasync","Main")';
            var args = {
                tagName: $('#label').val()
            };

            $('#label').val('');
            $.ajax({
                type: "GET",
                url: link, // url of your action
                data: args, // parameters if available
                dataType: "json",
                success: function (data) {
                    $('.selectpicker').append(new Option(data.nazwa, data.id));
                    $('.selectpicker').selectpicker('refresh');
                },
                error: function (httpRequest, textStatus, errorThrown) {
                    alert("Error: " + textStatus + " " + errorThrown + " " + httpRequest);
                }
            });

        });

        $("#submitButton").click(function (e) {
            var isCorrect = true;

            $("#errorMessage").html('');

            if ($("#postName").val() == '') {
                var errorText = $('<div class="error alert alert-danger" role="alert">Pole nazwy nie może być puste!!</div>');
                $("#errorMessage").append(errorText);
                isCorrect = false;
            }

            if ($("#postContent").val() == '') {
                var errorText = $('<div class="error alert alert-danger" role="alert">Treść postu nie może być pusta!!</div>');
                $("#errorMessage").append(errorText);
                isCorrect = false;
            }

            if (!isCorrect) {
                return false;
            }

        });

        $("#toggleAddTag").click(function () {
            $('#addTagForm').toggle('slow');
        })
    });

</script>









